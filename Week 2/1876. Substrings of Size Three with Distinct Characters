1876. Substrings of Size Three with Distinct Characters : 
------------------------------------------------------------------
Brute-Force - TimeComplexity : O(n^2)
--------------------------------------------------
Brute-Force - Code :
-------------------------------
class Solution:
    def countGoodSubstrings(self, s: str) -> int:
        n = len(s)
        count = 0
        for i in range(n):
            for j in range(i+1,n):
                if (j-i == 2) and (s[i] !=s[j] and s[i+1] != s[i] and s[i+1] != s[j]):
                    count = count+1
        return count


Main-Code-TimeComplexity : O(n)
------------------------------------------
Main-Code :
--------------------------------------
class Solution:
    def countGoodSubstrings(self, s: str) -> int:
        n = len(s)
        count = 0
        l = 0
        ans = 0
        list_a = []
        for r in range (n):
            list_a.append(s[r])
            if r-l == 3:
                list_a.pop(0)
                l+=1
            if len(set(list_a)) == 3:
                ans +=1
        return ans

        
        
