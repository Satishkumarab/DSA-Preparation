1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold :
----------------------------------------------------------------------------------------
TimeComplexity : O(n)
-----------------------------------------------------------------------
BruteForce-Code : (TimeLimit Exceeds)
-------------------------------------------------------------------------

class Solution:
    def numOfSubarrays(self, arr: List[int], k: int, threshold: int) -> int:
        count = 0
        avg =0
        new_array= []
        summ = 0
        n = len(arr)
        for i in range (len(arr)):
            summ = summ+arr[i]
            new_array.append(arr[i])
            if len(new_array) == k+1:
                new_array.pop(0)
            if len(new_array) == k:
                summ = sum(new_array)
                avg = summ // k
                if avg >= threshold :
                    count+=1
            

        return(count)


Main-Code :
----------------------------------

class Solution:
    def numOfSubarrays(self, arr: List[int], k: int, threshold: int) -> int:
        count = 0
        l = 0
        summ = 0
        for r in range (0,len(arr)):
            summ += arr[r]
            if r-l+1 == k+1:
                summ -= arr[l]
                l+=1
            if r-l+1 == k:
                
                if summ//k >= threshold:
                    count += 1
        return count
        

